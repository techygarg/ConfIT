name: Build, Test & Checks

on:
  push:
    branches:
      - '*'
      - '!**tags**'
    tags:
      - "v*"

env:
  MY_GIT_USER: ${{ github.actor }}
  MY_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ConfIT-Build-Test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip')"
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Install Dependencies
        run: dotnet restore './src/ConfIT.sln'

      - name: Build
        run: dotnet build './src/ConfIT.sln'  --configuration Release --no-restore

  Example-Build-Test:
    needs: ConfIT-Build-Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Install Dependencies
        run: dotnet restore './example/User.sln'

      - name: Build
        run: dotnet build './example/User.sln'  --configuration Release --no-restore

      - name: Run Component Tests
        working-directory: ./example/User.ComponentTests
        run: dotnet test

      - name: Run UserApi
        working-directory: ./example/User.Api
        run: dotnet run &

      - name: Run JustAnotherService
        working-directory: ./example/JustAnotherService
        run: dotnet run &

      - name: Run Integration Tests
        working-directory: ./example/User.IntegrationTests
        run: dotnet test

  Release:
    needs: Example-Build-Test
    runs-on: ubuntu-latest
    if: "contains(github.ref, '/tags/v')"
    steps:
      - name: Release source code
        uses: ncipollo/release-action@v1
        with:
          token: ${{ env.MY_GIT_TOKEN }}

  Publish-Nuget:
    needs: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Get Release Version From Tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - name: Pack
        working-directory: ./src/ConfIT
        run: dotnet pack --configuration Release /p:Version=${VERSION} --output .

      - name: Push To Nuget
        working-directory: ./tools
        run: ./push_nuget.sh ${VERSION} "$NUGET_API_TOKEN"
        env:
          NUGET_API_TOKEN: ${{ secrets.NUGET_API_KEY }}
